plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

ext {
    set("opentelemetry.version", "1.31.0")
    lombokVersion = "1.18.30"
}

dependencies {
//    implementation 'ford.bdrck:bdrck-observability-java:1.1.2-SNAPSHOT'

    implementation("io.opentelemetry:opentelemetry-api") {
        version {strictly("1.31.0")}
    }
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "io.opentelemetry:opentelemetry-sdk:1.31.0"
    implementation "io.opentelemetry:opentelemetry-sdk-metrics:1.31.0"
    implementation "io.opentelemetry:opentelemetry-exporter-logging:1.31.0"
    implementation "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:1.31.0"
    implementation "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:1.31.0"
//    For Logging
//    implementation "io.opentelemetry:opentelemetry-semconv:1.21.0-alpha"
    implementation "io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:1.30.0-alpha"
    runtimeOnly "io.opentelemetry.instrumentation:opentelemetry-logback-mdc-1.0:1.30.0-alpha"
    implementation ("org.slf4j:slf4j-api") {
        version{ strictly("2.0.4")}
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
